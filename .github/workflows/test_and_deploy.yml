name: Test and deploy

on:
  push:
    branches: [ "master" ]

env:
  IMAGE_NAME: teletekstbot

permissions: write-all

jobs:
  test:
  
      runs-on: ubuntu-latest
  
      steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker-compose build
          docker tag teletekstbot-net_dotnet-service ghcr.io/lorankloeze/teletekstbot:latest
          docker push ghcr.io/lorankloeze/teletekstbot:latest
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key verification
        run: |
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Run docker compose pull
        run: |
          ssh -A ${{ vars.SSH_USER}}@${{ secrets.REMOTE_HOST }} "cd /apps/teletekstbot-net && docker compose pull dotnet-service"

      - name: Run docker compose build
        run: |
          ssh -A ${{ vars.SSH_USER}}@${{ secrets.REMOTE_HOST }} "cd /apps/teletekstbot-net && docker compose build"
    
